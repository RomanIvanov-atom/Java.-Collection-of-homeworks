package groupHWs.groupHW_3.NeuchTask;
//Генерируется строка в несколько шагов:
//Берётся единичный символ, например 'a' и вставляется в строку. Получается строка из одного символа "a"
//Все последующие шаги одинаковы. Берётся уже имеющаяся строка ("a"), удваивается ("aa") и изменяем последний
// символ на другой (назовём его противоположным). Если последний символ 'a', то  заменяем его на 'b', а если 'b',
// то заменяем его на 'a' В данному случае у нас строка "aa", последний символ в ней 'a', заменяем его на 'b'.
// получаем "ab".
//Если собираемся дальше изменять строку, то действуем по такому же сценарию. Взяли уже имеющуюся строку "ab",
// удвоили, получили "abab". Последний символ заменили на противоположный, получили "abaa"
//Если дальше собираемся изменять строку, то получим строку "abaaabab"
//И так далее
//Таким образом, строка изменяется так:
//a
//ab
//abaa
//abaaabab
//abaaabababababaa
//И далее настолько, насколько захотим.
//Нетрудно заметить, что длина строки суть степень двойки. 1,2, 4, 8 и так далее. Написать функцию, которая
// в качестве параметра принимала бы показатель степени, и возвращала необходимую строку. Например, если функция
// принимает 3, то 3 это показатель степени двойки. Два в третьей степени равно 8. То есть вернуться должна
// строка из восьми символов, то есть abaaabab
public class Main {
    public static void main(String[] args) {
        System.out.println(Letsdoit.letsDoIt(5));
    }
}
//1   0
//2   1
//4   2
//8   3
//16  4